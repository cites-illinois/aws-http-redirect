global
    user nobody
    group nobody
    chroot "$JAIL"
    log "${SYSLOG_HOSTNAME}:${SYSLOG_PORT}" "${SYSLOG_FACILITY}" "${SYSLOG_LEVEL}"


# https://www.haproxy.com/blog/introduction-to-haproxy-logging/
# https://jablonskis.org/2014/haproxy-logging-to-syslog-in-json/index.html
defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

    log global
    option httplog


frontend redirect
    bind "*:$PORT"

    # Set is_xfor to true if header X-Forwarded-For is set
    acl xfor_exists   req.hdr(X-Forwarded-For)   -m found

    # Set is_xport to true if header X-Forwarded-Port is set
    acl xport_exists  req.hdr(X-Forwarded-Port)  -m found

    # Set is_http to true if header X-Forwarded-Proto is set to http
    acl is_http   req.hdr(X-Forwarded-Proto) http

    redirect scheme https if is_http xfor_exists xport_exists
    use_backend health-check unless is_http xfor_exists xport_exists

    # Add X-Forwarded-For and X-Forwarded-Port to default log format
    # https://www.haproxy.com/blog/haproxy-log-customization/
    capture request  header    X-Forwarded-For      len 50
    capture request  header    X-Forwarded-Port     len 50

    # https://docs.splunk.com/Documentation/CIM/4.12.0/User/NetworkTraffic
    # https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#8.2.4
    log-format '{"src_ip":"%[capture.req.hdr(0)]","src_port":"%[capture.req.hdr(1)]","date_time":"%tr","backend_name":"%b","duration":%TR,"status_code":%ST,"bytes_in":%B,"bytes_out":%U,"srv_conn":%sc,"retries":%rc,"srv_queue":%sq,"backend_queue":%bq,"http_request":"%r","src_translated_ip":"%ci","src_translated_port":%cp}'

backend health-check
    mode http
    errorfile 503 /etc/haproxy/errors/healthcheck.http
